<Project Sdk="Microsoft.NET.Sdk.IL">

  <PropertyGroup>
    <Descripton>DO NOT REFERENCE THIS PACKAGE DIRECTLY! Reference MonoMod.Backports instead.</Descripton>
    
    <!-- target frameworks are defined in Common.props -->
    <TargetFrameworks>$(BackportsTargetFrameworks)</TargetFrameworks>

    <VersionPrefix>1.1.0</VersionPrefix>
    <PackageValidationBaselineVersion>1.0.0</PackageValidationBaselineVersion>
    <Platforms>AnyCPU;ARM64</Platforms>
  </PropertyGroup>
  
  <!-- Manually add Backports reference to NuGetizer set -->
  <!-- NuGet doesn't like cyclical references.
  <Target Name="AddBackportsReference" BeforeTargets="GetPackageContents">
    <MSBuild Projects="$(MMSourcePath)MonoMod.Backports\MonoMod.Backports.csproj"
             Targets="GetProperties"
             Properties="PropertyNames=PackageId;Version">
      <Output TaskParameter="TargetOutputs" ItemName="BackportsProps" />
    </MSBuild>

    <PropertyGroup>
      <BackportsPackageId Condition="'%(BackportsProps.Identity)' == 'PackageId'">%(Value)</BackportsPackageId>
      <BackportsVersion Condition="'%(BackportsProps.Identity)' == 'Version'">%(Value)</BackportsVersion>
    </PropertyGroup>
    
    <ItemGroup>
      <PackageFile Include="$(BackportsPackageId)" Version="$(BackportsVersion)" PackFolder="Dependency" />
    </ItemGroup>
  </Target>
  -->
  
  <!-- ApiCompat properly resolve backports -->
  <Target Name="AddBackportsRefForNonBuildingPack" BeforeTargets="AssignProjectConfiguration" Condition="'$(BuildProjectReferences)' == 'false' and '$(_IsPacking)' == 'true'">
    <ItemGroup>
      <ProjectReference Include="$(MMSourcePath)MonoMod.Backports\MonoMod.Backports.csproj" />
    </ItemGroup>
  </Target>
  
</Project>