<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!-- target frameworks are defined in Common.props -->
    <TargetFrameworks>$(BackportsTargetFrameworks)</TargetFrameworks>
    
    <!-- We're not going to be having any of the logic that would use the shared sources, so we'll just not include them -->
    <MMSharedSourceFiles>false</MMSharedSourceFiles>
    <MMIncludeUnsafeAlias>false</MMIncludeUnsafeAlias>
    <MMReferenceILHelpers>false</MMReferenceILHelpers>
    <MMReferenceUtils>false</MMReferenceUtils>
    <MMReferenceBackports>false</MMReferenceBackports>
    <RootNamespace><![CDATA[ ]]></RootNamespace>

    <VersionPrefix>1.1.2</VersionPrefix>
    <PackageValidationBaselineVersion>1.1.0</PackageValidationBaselineVersion>
    <Platforms>AnyCPU;ARM64</Platforms>
  </PropertyGroup>

  <PropertyGroup>
    <Description>A set of backports of new BCL features to all frameworks which MonoMod supports.</Description>
  </PropertyGroup>

  <PropertyGroup>
    <MMTFKind>$([MSBuild]::GetTargetFrameworkIdentifier('$(TargetFramework)'))</MMTFKind>
    <MMTFVersion>$([MSBuild]::GetTargetFrameworkVersion('$(TargetFramework)'))</MMTFVersion>

    <BclHasOobImpls>false</BclHasOobImpls>
    <BclHasOobImpls Condition="('$(MMTFKind)' == '.NETStandard' and $([MSBuild]::VersionGreaterThanOrEquals('$(MMTFVersion)','2.1')))&#xD;&#xA;                    or ('$(MMTFKind)' == '.NETCoreApp' and $([MSBuild]::VersionGreaterThanOrEquals('$(MMTFVersion)','2.1')))">true</BclHasOobImpls>
  </PropertyGroup>

  <ItemGroup>
    <!-- Manually reference ILHelpers -->
    <ProjectReference Include="$(MMSourcePath)MonoMod.ILHelpers\MonoMod.ILHelpers.ilproj">
      <Aliases>ilhelpers</Aliases>
    </ProjectReference>
  </ItemGroup>

  <!-- We only actually want to take a dependency on the packages when they're necessary -->
  <ItemGroup Condition="!('$(MMTFKind)' == '.NETFramework' and $([MSBuild]::VersionLessThan('$(MMTFVersion)','4.5')))">
    <!-- ArrayPool<T> -->
    <!-- <PackageReference Include="System.Buffers" Version="4.5.1"
                      Condition="!('$(MMTFKind)' == '.NETStandard' and $([MSBuild]::VersionGreaterThanOrEquals('$(MMTFVersion)','2.1'))) and !('$(MMTFKind)' == '.NETCoreApp')" />-->
    <!-- We don't actually want to use the System.Buffers OOB package because we provide a newer (and faster) implementation, from 6.0 instead of 3.1.
         We can also update our implementation, while the OOB package will never be used, ever (practically speaking). -->            
    
    <!-- The entire rest of System.Buffers and System.Memory -->
    <!--<PackageReference Include="System.Memory" Version="4.5.5" Condition="'$(BclHasOobImpls)' == 'false'" />-->
    <!-- We can't actually use System.Memory, because it pulls in S.R.CS.Unsafe, which ends up being incompatible with the version we need for the build tasks,
         which causes some build-time hell. If we can ever fix this, we may want to re-enable the System.Memory dep. -->
    
    <!-- System.ValueTuple`* -->
    <PackageReference Include="System.ValueTuple" Version="4.5.0" Condition="!('$(MMTFKind)' == '.NETStandard' and $([MSBuild]::VersionGreaterThanOrEquals('$(MMTFVersion)','2.0')))&#xD;&#xA;      and !('$(MMTFKind)' == '.NETFramework' and $([MSBuild]::VersionGreaterThanOrEquals('$(MMTFVersion)','4.7')))&#xA;                      and !('$(MMTFKind)' == '.NETCoreApp')" />
  </ItemGroup>

  <!-- For some unknown reason, MS.BCL.HashCode causes compilation issues on older runtimes...
  <ItemGroup Condition="!('$(MMTFKind)' == '.NETFramework' and $([MSBuild]::VersionLessThan('$(MMTFVersion)','4.6.1'))) and '$(BclHasOobImpls)' == 'false'">
    <PackageReference Include="Microsoft.Bcl.HashCode" Version="1.1.1" /> <!- System.HashCode ->
  </ItemGroup>
  -->

</Project>

